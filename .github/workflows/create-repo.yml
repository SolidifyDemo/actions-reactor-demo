name: Create repo IssueOps Sample
on:
  issues:
    types: [opened, reopened]

permissions:
  issues: write
  actions: read

jobs:

  prepare:
    if: contains(github.event.issue.labels.*.name, 'create-repo')
    runs-on: ubuntu-latest
    outputs:
      repoType: ${{ steps.generate_variables.outputs.repoType }}
      repository: ${{ steps.generate_variables.outputs.repository }}
      organization: ${{ steps.generate_variables.outputs.organization }}
    
    steps:
      - name: Run Issue form parser
        id: parse
        uses: peter-murray/issue-forms-body-parser@v2.0.0
        with:
          issue_id: ${{ github.event.issue.number }}
          separator: '###'
          label_marker_start: '>>'
          label_marker_end: '<<'
          
      - name: Publish output variables
        uses: actions/github-script@v6
        id: generate_variables
        env:
          parsed_payload: ${{ steps.parse.outputs.payload  }}
        with:
          script: |
            parsedPayload = JSON.parse(process.env.parsed_payload);
            const repository = parsedPayload['Repository-name'];
            const repoType = parsedPayload['Repository-type'];
            const org = context.payload.repository.owner.login;
            console.log(repository)
            console.log(repoType)
            core.setOutput('repoType', `${repoType}`);
            core.setOutput('repository', `${repository}`);
            core.setOutput('organization', `${org}`);   

      - name: Greetings for the users submitting issues to this repository
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              ğŸ‘‹ Thanks for opening this issue to create the repository '${{ steps.generate_variables.outputs.repository }}-${{ steps.generate_variables.outputs.repoType }}'!
              Hang on for a moment while we do the checks and you will be notified in this issue when everything is ready.
              `
            })
          
  trigger_repo_creation:
    needs: 
      - prepare
    runs-on: ubuntu-latest
    
    if: github.event_name == 'issues' &&
      (github.event.action == 'opened' || github.event.action == 'reopened')
    
    steps:
    
      - name: Dump GitHub context
        env:
           GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      
      - name: Create target repository
        id: create_repository
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MY_TOKEN }}
          script: |
            console.log(context.payload.repository.owner)
       
            github.rest.repos.createInOrg({
              org: '${{needs.prepare.outputs.organization}}',
              name: '${{needs.prepare.outputs.repository}}-${{needs.prepare.outputs.repoType}}',
            });
      
               
      - if: ${{ success() }}         
        uses: actions/github-script@v6
        with:
          script: |
            const repoName = '${{ needs.prepare.outputs.repository }}-${{ needs.prepare.outputs.repoType}}'
            const body = `ğŸ‘‹ Repository: [${repoName}](${context.payload.repository.owner.html_url}/${repoName}) has been created!`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
            
             github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            })

            
            
      - if: ${{ failure() }}
        name: Report failed to create repo
        uses: actions/github-script@v6
        with:
          script: |
            const body = `:no_entry: **Failed to create repository.** [View workflow run for details](${context.payload.repository.html_url}/actions/runs/${context.runId})`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })        
